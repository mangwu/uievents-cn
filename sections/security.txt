<section>
<h2 id="security-considerations">安全注意事项</h2>


本附录讨论了用户界面事件实现的安全注意事项。
讨论仅限于由本规范中定义的概念可能直接引起的安全问题，这些概念包括事件模型的实现
、APIs 和事件。实现(Implementations)通常支持其他功能，如脚本语言、其他 APIs 
和本文档中未定义的其他事件。这些功能构成不可预知的要素，超出了本规范的范围。
实现人员 <span class="zh-upper">应当</span> 查阅上述种种功能的规范，
以了解其各自的安全注意事项。

本规范中定义的许多事件类型都是响应用户操作而被派发的。
这使得恶意 <a href="#event-listener">事件监听器</a> 能够访问用户通常认为是隐私
(confidential)的信息，例如，用户在填写表单时可能犯的拼写错误，
如果用户在提交表单前不久重新考虑对多选问题的回答，用户的打字率或主要输入机制。
在最坏的情况下，恶意 <a href="#event-listener">事件监听器</a> 
可以捕获所有用户交互，并通过 DOM 实现中通常可用的方法(如 XMLHttpRequest 接口，
本规范未定义这些方法)将其提交给第三方。

In DOM implementations that support facilities to load external data, events
like the EVENT{error} event can provide access to sensitive information about
the environment of the computer system or network. An example would be a
malicious HTML document that attempts to embed a resource on the local network
or the localhost on different ports. An embedded <a>DOM application</a> could
then listen for EVENT{error} and EVENT{load} events to determine which other
computers in a network are accessible from the local system or which ports are
open on the system to prepare further attacks.

An implementation of UI Events alone is generally insufficient to perform
attacks of this kind and the security considerations of the facilities that
possibly support such attacks apply. For conformance with this specification,
DOM implementations MAY take reasonable steps to ensure that <a>DOM
applications</a> do not get access to confidential or sensitive information. For
example, they might choose not to dispatch EVENT{load} events to nodes that
attempt to embed resources on the local network.

</section>
